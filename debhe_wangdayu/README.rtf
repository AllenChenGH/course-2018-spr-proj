{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf100
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11720\viewh9040\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs28 \cf0 The Purpose of this Project\

\b0\fs24 \
Recently, a new type of station-free sharing bike \'97 ofo, has started to appear in the Boston area. These yellow ofo bikes can be picked up or dropped off at any location where traditional bike parking is allowed. Because of its flexibility and inexpensiveness, it is quite likely that ofo will become popular and widely used in the city very soon. At that time, one of the big issue the company need to solve is the maintenance of the bikes. Since the bikes are used with a high frequency and can be left anywhere, it is essential to find a best location to gather all the bikes that need to be maintained. In order to find such a location, we will try to find out where the bikes would mostly be used and left by analyzing public transportation as well as school and restaurant locations.\
\

\b\fs28 Authors
\fs24 \

\b0 Xinchun He (debhe) and Dayuan Wang (wangdayu)\
\
\

\b\fs28 Data Retrieval
\b0\fs24 \
We collected 5 data sets from Analyze Boston, Hubway, and Data Mechanics.\
1) publicSchool.py and privateSchool.py\
    We retrieved the list of Boston\'92s public schools and private schools, their school types, and  their location coordinates.\
2) restaurants.py\
    We retrieved the list of Boston\'92s restaurants and their location coordinates.\
3) busStop.py\
    We collected the locations of all bus stops.\
4) subwayStop.py\
    We collected the locations of all subway stops\
5) hubwayStation.py\
    We collected the locations of all hubway bike stations. \
\
\

\b\fs28 Data Transformation\

\b0\fs24 1) We did selection on public schools and privates schools to filter out any elementary schools since students in those schools are too young to ride ofo.\
\
2) Then, we did union on selected public and private schools to create a list of all schools in allSchool.py\
\
3) Finally, in schoolHubwayDistance.py, restaurantHubwayDistance.py, busHubwayDistance.py, subwayHubwayDistance.py, we used product, projection, and aggregation to find the closest hubway station to each school, restaurant, bus stop, and subway stops and their distance. Take schoolHubwayDistance.py for example. First, we performed product to get a list of all pairs of schools and hubway station with their coordinates. Then, we did a projection to find the Euclidean distance between each pair. Next, we used aggregation to find the pair with shortest distance. \
\
\
}